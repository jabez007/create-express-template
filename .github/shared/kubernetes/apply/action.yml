name: Apply Kubernetes Manifests to Cluster
description: ''

inputs:
  dry_run:
    description: ''
    default: 'true'
  debug:
    description: Whether or not to display debug output
    default: "false"

runs:
  using: composite
  steps:
  
    - name: Check branch
      id: check_branch
      run: echo "branch_name=$(echo $GITHUB_REF | sed 's|refs/heads/||')" >> $GITHUB_ENV
      shell: bash

    - name: Validate dry_run usage
      id: if_production
      run: |
        if [[ "$branch_name" == "main" || "$branch_name" == "master" ]]; then
          echo "dry_run=${{ inputs.dry_run }}" >> "$GITHUB_OUTPUT"
        else
          echo "dry_run=true" >> "$GITHUB_OUTPUT"
        fi
      shell: bash

    ####
  
    - name: Test kubectl access
      if: ${{ steps.if_production.outputs.dry_run != 'true' && inputs.debug == 'true' }}
      run: kubectl get pods
      shell: bash

    ####

    - name: Dry run all manifests
      if: ${{ steps.if_production.outputs.dry_run == 'true' }}
      run: |
        for file in k8s/*.yaml k8s/*.yml; do
          if [ -e "$file" ]; then
            kubectl apply -f "$file" ${{ steps.if_production.outputs.dry_run == 'true' && '--dry-run=client' || '' }}
          fi
        done
      shell: bash

    - name: Apply all manifests
      if: ${{ steps.if_production.outputs.dry_run != 'true' }}
      run: |
        for file in k8s/*.yaml k8s/*.yml; do
          if [ -e "$file" ]; then
            if kubectl diff -f "$file" > /dev/null; then
              kind=$(yq -r .kind "$file" | tr '[:upper:]' '[:lower:]')
              case "$kind" in
                deployment|statefulset|daemonset)
                  name=$(yq -r .metadata.name "$file")
                  kubectl rollout restart "$kind" "$name"
                  ;;
                *)
                  echo "Resource type $kind does not support rollout restart."
                  ;;
              esac
            else
              kubectl apply -f "$file"
            fi
          fi
        done
      shell: bash

    ####

    - name: Describe resources
      if: ${{ steps.if_production.outputs.dry_run != 'true' && inputs.debug == 'true' }}
      run: |
        for file in k8s/*.yaml k8s/*.yml; do
          if [ -e "$file" ]; then
            kind=$(yq -r .kind "$file")
            name=$(yq -r .metadata.name "$file")
            kubectl describe "$kind" "$name"
          fi
        done
      shell: bash

    ####

    - name: Check deployment rollout status
      if: ${{ (hashFiles('k8s/deployment.yaml') != '' || hashFiles('k8s/deployment.yml') != '') && steps.if_production.outputs.dry_run != 'true' }}
      run: |
        if [ -f k8s/deployment.yaml ]; then
          kubectl rollout status deploy $(yq -r .metadata.name k8s/deployment.yaml)
        elif [ -f k8s/deployment.yml ]; then
          kubectl rollout status deploy $(yq -r .metadata.name k8s/deployment.yml)
        else
          echo "No deployment file found."
        fi
      shell: bash

    ####
